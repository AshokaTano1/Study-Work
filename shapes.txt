def __SaveFolderStructure(folderFrom, folderTo, userFrom, userTo, idTab):
    for link in Link.objects.filter(inFolder=folderFrom, user=userFrom, idTab=idTab):
        link.idTab = 0
        link.pk = None
        link.inFolder = folderTo
        link.user = userTo
        with transaction.atomic():
            link.save()
    for child in Folder.objects.filter(inFolder=folderFrom, user=userFrom):
        child.idTab = 0
        folderFrom = deepcopy(child)
        child.pk = None
        child.inFolder = folderTo
        child.user = userTo
        with transaction.atomic():
            child.save()
        __SaveFolderStructure(folderFrom, child, userFrom, userTo)

def copy_profile(userTo, userFrom, idTab):
    Link.objects.filter(user=userTo).delete()
    Folder.objects.filter(user=userTo).delete()
    for link in Link.objects.filter(inFolder=None, user=userFrom, idTab=idTab):
        link.idTab = 0
        link.pk = None
        link.user = userTo
        link.inFolder = None
        with transaction.atomic():
            link.save()
    for folder in Folder.objects.filter(inFolder=None, user=userFrom, idTab=idTab):
        folder.idTab = 0
        folderFrom = deepcopy(folder)
        folder.pk = None
        folder.user = userTo
        folder.inFolder = None
        with transaction.atomic():
            folder.save()
        __SaveFolderStructure(folderFrom, folder, userFrom, userTo, idTab)
