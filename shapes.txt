def copy_profile(userTo, userFrom, idTab):
    # Удаление всех ссылок и папок для нового пользователя
    Link.objects.filter(user=userTo).delete()
    Folder.objects.filter(user=userTo).delete()

    # Копирование ссылок из исходного пользователя в новый
    for link in Link.objects.filter(inFolder=None, user=userFrom, idTab=idTab):
        link.pk = None  # Обнуляем первичный ключ для создания новой записи
        link.user = userTo  # Меняем владельца
        link.inFolder = None  # Убираем папку для ссылки
        with transaction.atomic():
            link.save()  # Сохраняем новую ссылку

    # Копирование папок из исходного пользователя в новый
    for folder in Folder.objects.filter(inFolder=None, user=userFrom, idTab=idTab):
        folderFrom = deepcopy(folder)  # Создаем копию исходной папки
        folder.pk = None  # Обнуляем первичный ключ для создания новой папки
        folder.user = userTo  # Меняем владельца
        folder.inFolder = None  # Убираем связь с папкой
        with transaction.atomic():
            folder.save()  # Сохраняем новую папку

        # Копирование структуры папок (если есть вложенные папки)
        __SaveFolderStructure(folderFrom, folder, userFrom, userTo, idTab)


def __SaveFolderStructure(folderFrom, folderTo, userFrom, userTo, idTab):
    # Копирование ссылок, которые находятся в folderFrom и принадлежат userFrom
    for link in Link.objects.filter(inFolder=folderFrom, user=userFrom, idTab=idTab):
        link.pk = None  # Обнуляем первичный ключ для создания нового объекта
        link.inFolder = folderTo  # Связываем с новой папкой
        link.user = userTo  # Меняем владельца
        with transaction.atomic():
            link.save()  # Сохраняем новую ссылку

    # Копирование дочерних папок
    for child in Folder.objects.filter(inFolder=folderFrom, user=userFrom, idTab=idTab):
        folderFromCopy = deepcopy(child)  # Создаем копию текущей папки
        child.pk = None  # Обнуляем первичный ключ для новой папки
        child.inFolder = folderTo  # Связываем с новой папкой
        child.user = userTo  # Меняем владельца
        with transaction.atomic():
            child.save()  # Сохраняем новую папку

        # Рекурсивно копируем структуру вложенных папок
        for subfolder in Folder.objects.filter(user=userFrom, idTab=idTab, inFolder=child):
            subfolder.pk = None
            subfolder.user = userTo
            subfolder.inFolder = child
            with transaction.atomic():
                subfolder.save()

            # Копируем ссылки в вложенной папке
            for link in Link.objects.filter(user=userFrom, idTab=idTab, inFolder=subfolder):
                link.pk = None
                link.user = userTo
                link.inFolder = subfolder
                with transaction.atomic():
                    link.save()

        # Рекурсивно копируем все вложенные папки и ссылки
        __SaveFolderStructure(folderFromCopy, child, userFrom, userTo, idTab)
